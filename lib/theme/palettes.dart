import 'package:flutter/material.dart';

class ThemePalette {
  final String id;
  final String zhName;
  final String enName;
  final ColorScheme light;
  final ColorScheme dark;

  const ThemePalette({
    required this.id,
    required this.zhName,
    required this.enName,
    required this.light,
    required this.dark,
  });

  String get displayNameZh => zhName;
  String get displayNameEn => enName;
}

class ThemePalettes {
  static const String defaultId = 'default';
  static const String blueId = 'blue';
  static const String greenId = 'green';
  static const String purpleId = 'purple';
  static const String yellowId = 'yellow';
  static const String smokyRoseId = 'smoky_rose';
  static const String terracottaId = 'terracotta';

  static const ThemePalette defaultPalette = ThemePalette(
    id: defaultId,
    zhName: '默认',
    enName: 'Default',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF4D5C92),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFDCE1FF),
      onPrimaryContainer: Color(0xFF03174B),
      secondary: Color(0xFF595D72),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFDEE1F9),
      onSecondaryContainer: Color(0xFF161B2C),
      tertiary: Color(0xFF75546F),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFFFD7F6),
      onTertiaryContainer: Color(0xFF2C122A),
      error: Color(0xFFBB0947),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFDDADE),
      onErrorContainer: Color(0xFF400013),
      surface: Color(0xFFFEFBFF),
      onSurface: Color(0xFF1A1B21),
      onSurfaceVariant: Color(0xFF45464F),
      outline: Color(0xFF75757F),
      outlineVariant: Color(0xFFC6C6D0),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF2F3036),
      onInverseSurface: Color(0xFFF1F0F7),
      inversePrimary: Color(0xFFB6C4FF),
      surfaceTint: Color(0xFF4D5C92),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFFB6C4FF),
      onPrimary: Color(0xFF1D2D61),
      primaryContainer: Color(0xFF354479),
      onPrimaryContainer: Color(0xFFDCE1FF),
      secondary: Color(0xFFC2C5DD),
      onSecondary: Color(0xFF2B3042),
      secondaryContainer: Color(0xFF424659),
      onSecondaryContainer: Color(0xFFDEE1F9),
      tertiary: Color(0xFFE3BADA),
      onTertiary: Color(0xFF432740),
      tertiaryContainer: Color(0xFF5B3D57),
      onTertiaryContainer: Color(0xFFFFD7F6),
      error: Color(0xFFFCB4BD),
      onError: Color(0xFF670023),
      errorContainer: Color(0xFF910034),
      onErrorContainer: Color(0xFFFCB4BD),
      surface: Color(0xFF1A1B21),
      onSurface: Color(0xFFE3E1E9),
      onSurfaceVariant: Color(0xFFC6C6D0),
      outline: Color(0xFF90909A),
      outlineVariant: Color(0xFF45464F),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE3E1E9),
      onInverseSurface: Color(0xFF2F3036),
      inversePrimary: Color(0xFF4D5C92),
      surfaceTint: Color(0xFFB6C4FF),
    ),
  );

  // Blue palette: derived from provided logs
  static const ThemePalette blue = ThemePalette(
    id: blueId,
    zhName: '海霄蓝',
    enName: 'Aether Blue',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF3E5E98),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFD6E2FF),
      onPrimaryContainer: Color(0xFF001A43),
      secondary: Color(0xFF575E71),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFDBE2F9),
      onSecondaryContainer: Color(0xFF131C2C),
      tertiary: Color(0xFF77517D),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFFFD6FF),
      onTertiaryContainer: Color(0xFF2D0D35),
      error: Color(0xFFBB0947),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFDDADE),
      onErrorContainer: Color(0xFF400013),
      surface: Color(0xFFFDFBFF),
      onSurface: Color(0xFF1B1B1D),
      onSurfaceVariant: Color(0xFF44464E),
      outline: Color(0xFF73767E),
      outlineVariant: Color(0xFFC4C6D0),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF303033),
      onInverseSurface: Color(0xFFF2F0F4),
      inversePrimary: Color(0xFFACC7FF),
      surfaceTint: Color(0xFF3E5E98),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFFACC7FF),
      onPrimary: Color(0xFF032F67),
      primaryContainer: Color(0xFF24457F),
      onPrimaryContainer: Color(0xFFD6E2FF),
      secondary: Color(0xFFBFC6DC),
      onSecondary: Color(0xFF283041),
      secondaryContainer: Color(0xFF3F4758),
      onSecondaryContainer: Color(0xFFDBE2F9),
      tertiary: Color(0xFFE5B7E9),
      onTertiary: Color(0xFF44234C),
      tertiaryContainer: Color(0xFF5D3A63),
      onTertiaryContainer: Color(0xFFFFD6FF),
      error: Color(0xFFFCB4BD),
      onError: Color(0xFF670023),
      errorContainer: Color(0xFF910034),
      onErrorContainer: Color(0xFFFCB4BD),
      surface: Color(0xFF1B1B1D),
      onSurface: Color(0xFFE3E1E6),
      onSurfaceVariant: Color(0xFFC4C6D0),
      outline: Color(0xFF8E919A),
      outlineVariant: Color(0xFF44464E),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE3E1E6),
      onInverseSurface: Color(0xFF303033),
      inversePrimary: Color(0xFF3E5E98),
      surfaceTint: Color(0xFFACC7FF),
    ),
  );

  // Green palette
  static const ThemePalette green = ThemePalette(
    id: greenId,
    zhName: '竹影绿',
    enName: 'Bamboo Green',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF166C47),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFA3F4C5),
      onPrimaryContainer: Color(0xFF002111),
      secondary: Color(0xFF4E6356),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFD0E9D7),
      onSecondaryContainer: Color(0xFF0B1F15),
      tertiary: Color(0xFF22667A),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFB1EBFF),
      onTertiaryContainer: Color(0xFF001F28),
      error: Color(0xFFA63B00),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDBCF),
      onErrorContainer: Color(0xFF370E00),
      surface: Color(0xFFFBFDF8),
      onSurface: Color(0xFF191C1A),
      onSurfaceVariant: Color(0xFF404942),
      outline: Color(0xFF707871),
      outlineVariant: Color(0xFFC0C9C0),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF2E312F),
      onInverseSurface: Color(0xFFF0F1ED),
      inversePrimary: Color(0xFF87D7AA),
      surfaceTint: Color(0xFF166C47),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF87D7AA),
      onPrimary: Color(0xFF003921),
      primaryContainer: Color(0xFF005232),
      onPrimaryContainer: Color(0xFFA3F4C5),
      secondary: Color(0xFFB5CCBB),
      onSecondary: Color(0xFF203529),
      secondaryContainer: Color(0xFF374B3F),
      onSecondaryContainer: Color(0xFFD0E9D7),
      tertiary: Color(0xFF92CFE6),
      onTertiary: Color(0xFF003543),
      tertiaryContainer: Color(0xFF004E60),
      onTertiaryContainer: Color(0xFFB1EBFF),
      error: Color(0xFFFEB69A),
      onError: Color(0xFF5A1C00),
      errorContainer: Color(0xFF7F2B00),
      onErrorContainer: Color(0xFFFEB69A),
      surface: Color(0xFF191C1A),
      onSurface: Color(0xFFE1E3DF),
      onSurfaceVariant: Color(0xFFC0C9C0),
      outline: Color(0xFF8A938B),
      outlineVariant: Color(0xFF404942),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE1E3DF),
      onInverseSurface: Color(0xFF2E312F),
      inversePrimary: Color(0xFF166C47),
      surfaceTint: Color(0xFF87D7AA),
    ),
  );

  // Purple palette
  static const ThemePalette purple = ThemePalette(
    id: purpleId,
    zhName: '暮紫韵',
    enName: 'Twilight Purple',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF5D5698),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFE5DEFF),
      onPrimaryContainer: Color(0xFF190E51),
      secondary: Color(0xFF5F5C71),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFE5DFF9),
      onSecondaryContainer: Color(0xFF1B192C),
      tertiary: Color(0xFF844D69),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFFFD8EA),
      onTertiaryContainer: Color(0xFF350B25),
      error: Color(0xFFBB0947),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFDDADE),
      onErrorContainer: Color(0xFF400013),
      surface: Color(0xFFFFFBFF),
      onSurface: Color(0xFF1C1B1F),
      onSurfaceVariant: Color(0xFF47464F),
      outline: Color(0xFF77757E),
      outlineVariant: Color(0xFFC9C4CF),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF313033),
      onInverseSurface: Color(0xFFF4EFF4),
      inversePrimary: Color(0xFFC8BFFF),
      surfaceTint: Color(0xFF5D5698),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFFC8BFFF),
      onPrimary: Color(0xFF2E2766),
      primaryContainer: Color(0xFF453E7F),
      onPrimaryContainer: Color(0xFFE5DEFF),
      secondary: Color(0xFFC8C3DC),
      onSecondary: Color(0xFF302E42),
      secondaryContainer: Color(0xFF474459),
      onSecondaryContainer: Color(0xFFE5DFF9),
      tertiary: Color(0xFFF7B3D3),
      onTertiary: Color(0xFF4E203A),
      tertiaryContainer: Color(0xFF693651),
      onTertiaryContainer: Color(0xFFFFD8EA),
      error: Color(0xFFFCB4BD),
      onError: Color(0xFF670023),
      errorContainer: Color(0xFF910034),
      onErrorContainer: Color(0xFFFCB4BD),
      surface: Color(0xFF1C1B1F),
      onSurface: Color(0xFFE6E1E6),
      onSurfaceVariant: Color(0xFFC9C4CF),
      outline: Color(0xFF928F9A),
      outlineVariant: Color(0xFF47464F),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE6E1E6),
      onInverseSurface: Color(0xFF313033),
      inversePrimary: Color(0xFF5D5698),
      surfaceTint: Color(0xFFC8BFFF),
    ),
  );

  // Yellow palette
  static const ThemePalette yellow = ThemePalette(
    id: yellowId,
    zhName: '琥珀金',
    enName: 'Amber Gold',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF855304),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFFFDDB6),
      onPrimaryContainer: Color(0xFF2B1700),
      secondary: Color(0xFF715A41),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFFDDDBD),
      onSecondaryContainer: Color(0xFF281805),
      tertiary: Color(0xFF50652F),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFD3ECA8),
      onTertiaryContainer: Color(0xFF112000),
      error: Color(0xFFA63B00),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDBCF),
      onErrorContainer: Color(0xFF370E00),
      surface: Color(0xFFFFFBF9),
      onSurface: Color(0xFF1F1B16),
      onSurfaceVariant: Color(0xFF4F4539),
      outline: Color(0xFF817467),
      outlineVariant: Color(0xFFD4C4B4),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF35302A),
      onInverseSurface: Color(0xFFF9EFE7),
      inversePrimary: Color(0xFFFDB967),
      surfaceTint: Color(0xFF855304),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFFFDB967),
      onPrimary: Color(0xFF482A00),
      primaryContainer: Color(0xFF663D00),
      onPrimaryContainer: Color(0xFFFFDDB6),
      secondary: Color(0xFFDFC1A2),
      onSecondary: Color(0xFF3F2D17),
      secondaryContainer: Color(0xFF57432B),
      onSecondaryContainer: Color(0xFFFDDDBD),
      tertiary: Color(0xFFB7CF8E),
      onTertiary: Color(0xFF243605),
      tertiaryContainer: Color(0xFF3A4D1A),
      onTertiaryContainer: Color(0xFFD3ECA8),
      error: Color(0xFFFEB69A),
      onError: Color(0xFF5A1C00),
      errorContainer: Color(0xFF7F2B00),
      onErrorContainer: Color(0xFFFEB69A),
      surface: Color(0xFF1F1B16),
      onSurface: Color(0xFFEBE0D9),
      onSurfaceVariant: Color(0xFF4F4539),
      outline: Color(0xFF9D8E81),
      outlineVariant: Color(0xFF4F4539),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFEBE0D9),
      onInverseSurface: Color(0xFF35302A),
      inversePrimary: Color(0xFF855304),
      surfaceTint: Color(0xFFFDB967),
    ),
  );

  // New: Smoky Rose palette — exact values from logs
  static const ThemePalette smokyRose = ThemePalette(
    id: smokyRoseId,
    zhName: '暮霭玫',
    enName: 'Smoky Rose',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF824E6C),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFFFD8EA),
      onPrimaryContainer: Color(0xFF350B27),
      secondary: Color(0xFF715764),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFFCD9E9),
      onSecondaryContainer: Color(0xFF291521),
      tertiary: Color(0xFF6E557D),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFF3DAFF),
      onTertiaryContainer: Color(0xFF271236),
      error: Color(0xFFBB0947),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFDDADE),
      onErrorContainer: Color(0xFF400013),
      surface: Color(0xFFFFFBFF),
      onSurface: Color(0xFF201A1D),
      onSurfaceVariant: Color(0xFF504349),
      outline: Color(0xFF82737A),
      outlineVariant: Color(0xFFD4C2C9),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF352E32),
      onInverseSurface: Color(0xFFFAEDF1),
      inversePrimary: Color(0xFFF5B3D6),
      surfaceTint: Color(0xFF824E6C),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFFF5B3D6),
      onPrimary: Color(0xFF4E203C),
      primaryContainer: Color(0xFF673754),
      onPrimaryContainer: Color(0xFFFFD8EA),
      secondary: Color(0xFFDFBECD),
      onSecondary: Color(0xFF402A36),
      secondaryContainer: Color(0xFF58404C),
      onSecondaryContainer: Color(0xFFFCD9E9),
      tertiary: Color(0xFFDABCEA),
      onTertiary: Color(0xFF3D274C),
      tertiaryContainer: Color(0xFF553E64),
      onTertiaryContainer: Color(0xFFF3DAFF),
      error: Color(0xFFFCB4BD),
      onError: Color(0xFF670023),
      errorContainer: Color(0xFF910034),
      onErrorContainer: Color(0xFFFCB4BD),
      surface: Color(0xFF201A1D),
      onSurface: Color(0xFFECDFE3),
      onSurfaceVariant: Color(0xFFD4C2C9),
      outline: Color(0xFF9D8C93),
      outlineVariant: Color(0xFF504349),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFECDFE3),
      onInverseSurface: Color(0xFF352E32),
      inversePrimary: Color(0xFF824E6C),
      surfaceTint: Color(0xFFF5B3D6),
    ),
  );

  // New: Terracotta Clay palette — exact values from logs
  static const ThemePalette terracotta = ThemePalette(
    id: terracottaId,
    zhName: '陶砂红',
    enName: 'Terracotta Clay',
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF8B4E3B),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFFFDBD0),
      onPrimaryContainer: Color(0xFF370D02),
      secondary: Color(0xFF77574D),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFFFDBD0),
      onSecondaryContainer: Color(0xFF2C160E),
      tertiary: Color(0xFF745B25),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFFFDEA3),
      onTertiaryContainer: Color(0xFF261900),
      error: Color(0xFFB91F01),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDAD3),
      onErrorContainer: Color(0xFF3E0400),
      surface: Color(0xFFFFFBFF),
      onSurface: Color(0xFF221A18),
      onSurfaceVariant: Color(0xFF53433E),
      outline: Color(0xFF86736D),
      outlineVariant: Color(0xFFD9C2BB),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF372E2C),
      onInverseSurface: Color(0xFFFDEDE9),
      inversePrimary: Color(0xFFFFB59E),
      surfaceTint: Color(0xFF8B4E3B),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFFFFB59E),
      onPrimary: Color(0xFF522211),
      primaryContainer: Color(0xFF6E3725),
      onPrimaryContainer: Color(0xFFFFDBD0),
      secondary: Color(0xFFE7BDB1),
      onSecondary: Color(0xFF442A22),
      secondaryContainer: Color(0xFF5D4037),
      onSecondaryContainer: Color(0xFFFFDBD0),
      tertiary: Color(0xFFE4C282),
      onTertiary: Color(0xFF402D00),
      tertiaryContainer: Color(0xFF5A430F),
      onTertiaryContainer: Color(0xFFFFDEA3),
      error: Color(0xFFFFB5A5),
      onError: Color(0xFF650C00),
      errorContainer: Color(0xFF8D1600),
      onErrorContainer: Color(0xFFFFB5A5),
      surface: Color(0xFF221A18),
      onSurface: Color(0xFFEFDFDB),
      onSurfaceVariant: Color(0xFFD9C2BB),
      outline: Color(0xFFA18C86),
      outlineVariant: Color(0xFF53433E),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFEFDFDB),
      onInverseSurface: Color(0xFF372E2C),
      inversePrimary: Color(0xFF8B4E3B),
      surfaceTint: Color(0xFFFFB59E),
    ),
  );

  static const List<ThemePalette> all = <ThemePalette>[
    defaultPalette,
    blue,
    green,
    purple,
    yellow,
    smokyRose,
    terracotta,
  ];

  static ThemePalette byId(String id) {
    return all.firstWhere(
      (p) => p.id == id,
      orElse: () => defaultPalette,
    );
  }
}
